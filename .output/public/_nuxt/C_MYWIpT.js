import{r as l,k,D as i,a as f,H as E,q as h,I as S,J as p}from"./bb5wy1fZ.js";const q=()=>{const r=l(null),n=l(null),u=l(!1),c=l(null),o=l(!1),m=k(()=>!!r.value),g=k(()=>{var e;return((e=r.value)==null?void 0:e.email)==="admin@guzel.com"}),w=()=>{try{const{$firebase:e}=f();return!e||!e.auth?(console.warn("Firebase not initialized yet"),()=>{}):E(e.auth,async a=>{if(r.value=a,o.value=!0,a)try{const t=await a.getIdToken();n.value=t,localStorage.setItem("authToken",t),localStorage.setItem("userEmail",a.email||"")}catch(t){console.error("Error getting token:",t)}else n.value=null,localStorage.removeItem("authToken"),localStorage.removeItem("userEmail")})}catch(e){return console.error("Error initializing auth:",e),o.value=!0,()=>{}}},d=async(e=2e3)=>o.value?!0:new Promise(s=>{const a=Date.now(),t=()=>{if(o.value){s(!0);return}if(Date.now()-a>e){console.warn("Auth initialization timeout"),s(!1);return}setTimeout(t,50)};t()}),y=async(e,s)=>{u.value=!0,c.value=null;try{const{$firebase:a}=f();if(!a||!a.auth)throw new Error("Firebase not initialized");const t=await p(a.auth,e,s),v=await t.user.getIdToken();return n.value=v,localStorage.setItem("authToken",v),localStorage.setItem("userEmail",e),{success:!0,user:t.user}}catch(a){let t="حدث خطأ أثناء تسجيل الدخول";if(a.code)switch(a.code){case"auth/user-not-found":t="البريد الإلكتروني غير مسجل";break;case"auth/wrong-password":t="كلمة المرور غير صحيحة";break;case"auth/invalid-email":t="البريد الإلكتروني غير صحيح";break;case"auth/too-many-requests":t="تم تجاوز عدد المحاولات المسموح، يرجى المحاولة لاحقاً";break;case"auth/user-disabled":t="تم تعطيل هذا الحساب";break;case"auth/invalid-credential":t="بيانات الدخول غير صحيحة";break;case"auth/network-request-failed":t="خطأ في الاتصال بالشبكة";break;default:t=a.message||t}else t=a.message||t;return c.value=t,{success:!1,error:t}}finally{u.value=!1}},b=async()=>{u.value=!0;try{const{$firebase:e}=f();if(!e||!e.auth)throw new Error("Firebase not initialized");await S(e.auth),r.value=null,n.value=null,localStorage.removeItem("authToken"),localStorage.removeItem("userEmail"),await h("/login")}catch(e){c.value=e.message}finally{u.value=!1}},T=async()=>{if(r.value)try{const e=await r.value.getIdToken(!0);return n.value=e,localStorage.setItem("authToken",e),e}catch(e){return console.error("Error refreshing token:",e),null}return n.value},I=async()=>(await d(),m.value?!0:(await h("/login"),!1)),A=async()=>(await d(),m.value?g.value?!0:(await h("/"),!1):(await h("/login"),!1));return{user:i(r),token:i(n),loading:i(u),error:i(c),authReady:i(o),isAuthenticated:m,isAdmin:g,login:y,logout:b,getToken:T,requireAuth:I,requireAdmin:A,initAuth:w,waitForAuth:d}};export{q as u};
